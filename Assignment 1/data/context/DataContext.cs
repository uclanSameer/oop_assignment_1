using Microsoft.EntityFrameworkCore;

namespace Assignment_1.data;

public class DataContext : DbContext
{
    public DbSet<User> Users { get; set; }

    public DbSet<RunnerDetails> RunnerDetails { get; set; }

    public DbSet<VolunteerDetails> VolunteerDetails { get; set; }

    public DbSet<ParticipantDetails> ParticipantsDetails { get; set; }

    public DbSet<Sponsor> Sponsors { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        CreateRelationshipWithUserAndParticipant(modelBuilder);
        CreateRelationshipWithParticipantAndVolunteer(modelBuilder);
        CreateRelationshipWithParticipantAndRunner(modelBuilder);

        MakePrimaryAutoGenerated(modelBuilder);
    }


    /**
     * create one to one relationship with participant and Runner details
     */
    private void CreateRelationshipWithParticipantAndRunner(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ParticipantDetails>()
            .HasOne(p => p.RunnerDetails)
            .WithOne(r => r.ParticipantDetails)
            .HasForeignKey<RunnerDetails>(details => details.ParticipantDetailsId);
    }

    /**
     * create one to one relationship with participant and Volunteer details
     */
    private void CreateRelationshipWithParticipantAndVolunteer(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ParticipantDetails>()
            .HasOne(p => p.VolunteerDetails)
            .WithOne(v => v.ParticipantDetails)
            .HasForeignKey<VolunteerDetails>(details => details.ParticipantId);
    }

    /**
     * create one to one relationship with user and participant details
     */
    private static void CreateRelationshipWithUserAndParticipant(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<User>()
            .HasOne(u => u.ParticipantDetails)
            .WithOne(p => p.User)
            .HasForeignKey<ParticipantDetails>(details => details.UserId);
    }

    /**
     * Configure the database
     */
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        optionsBuilder.UseMySQL(
            "server=127.0.0.1;user id=root;password=kazekag3;port=3306;database=marathon;");
    }

    /**
     * Make the primary keys auto generated
     */
    private static void MakePrimaryAutoGenerated(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<User>()
            .Property(u => u.UserId)
            .ValueGeneratedOnAdd();
        modelBuilder.Entity<ParticipantDetails>()
            .Property(u => u.ParticipantDetailsId)
            .ValueGeneratedOnAdd();

        modelBuilder.Entity<RunnerDetails>()
            .Property(u => u.RunnerId)
            .ValueGeneratedOnAdd();

        modelBuilder.Entity<VolunteerDetails>()
            .Property(u => u.VolunteerId)
            .ValueGeneratedOnAdd();

        modelBuilder.Entity<Sponsor>()
            .Property(s => s.SponsorId)
            .ValueGeneratedOnAdd();
    }
}